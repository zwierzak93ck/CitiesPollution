{"version":3,"sources":["store/reducers/rootReducer.js","containers/CityInformationContainer.js","components/CountriesSearchField.js","services/DataBase.js","services/Api.js","consts.js","containers/CountriesSearchFieldContainer.js","services/Validation.js","App.js","index.js"],"names":["initialState","informations","rootReducer","state","arguments","length","undefined","action","type","Object","objectSpread","CityInformation","lazy","Promise","all","__webpack_require__","e","then","bind","CityInformationContainer","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","panel","event","expanded","setState","_this2","react_default","a","createElement","react","fallback","CircularProgress_default","color","name","map","description","indexOf","key","Date","now","Math","random","Component","connect","CountriesSearchField","Card_default","className","CardContent_default","react_select_esm","value","country","options","onChange","isClearable","index_es","limit","placeholder","onClick","variant","disabled","validate","loadData","dataBase","resolve","reject","request","transaction","objectStore","get","onsuccess","result","onerror","error","getMostPollutedCities","_ref","asyncToGenerator","regenerator_default","mark","_callee","countryPromise","countryResult","wrap","_context","prev","next","axios","sent","abrupt","data","results","element","city","stop","_x","_x2","apply","getCitiesDescriptions","_ref2","_callee2","citiesNames","promises","i","promise","_context2","push","pages","query","values","extract","_x3","setCitiesInformations","_ref3","_callee3","citiesDescriptions","_context3","_x4","_x5","countries","label","CountriesSearchFieldContainer","onValueChange","target","t0","t1","window","indexedDB","open","onupgradeneeded","createObjectStore","keyPath","onblocked","alert","openedDataBase","onbeforeunload","put","id","CountriesSearchField_CountriesSearchField","inputs","every","dispatch","App","containers_CountriesSearchFieldContainer","containers_CityInformationContainer","store","createStore","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.af62c0a8.chunk.js","sourcesContent":["const initialState = {\r\n    informations: null\r\n}\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_CITIES_INFORMATIONS':\r\n            return {\r\n                ...state,\r\n                informations: action.informations\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import React, { Component, lazy, Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nconst  CityInformation  = lazy(() => import('../components/CityInformation'))\r\n\r\nclass CityInformationContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            expanded: null\r\n        }\r\n    }\r\n\r\n    handleChange = (panel) => (event, expanded) => {\r\n        this.setState({\r\n            expanded: expanded ? panel : true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Suspense fallback={<h1>Loading <CircularProgress color=\"primary\"/></h1>}>\r\n                { this.props.informations.name.map(name => {\r\n                return <CityInformation\r\n                    name={name}\r\n                    description={this.props.informations.description[this.props.informations.name.indexOf(name)]}\r\n                    key={Date.now() + Math.random()}\r\n                    handleChange={this.handleChange(name)}\r\n                    expanded={this.state.expanded === name}\r\n                />\r\n            }) }\r\n            </Suspense>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        informations: state.informations\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CityInformationContainer);","import React from 'react';\r\nimport Select from 'react-select';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { CardActions, Button, TextField } from '@material-ui/core';\r\n\r\nexport const CountriesSearchField = (props) => {\r\n    return (\r\n        <Card className=\"flex-container search-form\">\r\n            <CardContent className=\"card-content\">\r\n                <Select\r\n                    value={props.country}\r\n                    options={props.options}\r\n                    onChange={props.onChange}\r\n                    isClearable\r\n                />\r\n                <TextField \r\n                    value={props.limit}\r\n                    type=\"number\"\r\n                    placeholder=\"Number of cities\"\r\n                    onChange={props.onChange}\r\n                />\r\n            </CardContent>\r\n            <CardActions className=\"card-actions\">\r\n                <Button className=\"button\" onClick={props.onClick} variant='contained' color='primary' disabled={!props.validate}>Get Data</Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}","export const openDataBase = () => {\r\n  return new Promise((resolve, reject) => {\r\n    const request = window.indexedDB.open(\"database - mostPollutedCities\", 1);\r\n    request.onupgradeneeded = () => {\r\n      request.result.createObjectStore('state', { keyPath: 'id' });\r\n    }\r\n    request.onsuccess = () => resolve(request.result);\r\n    request.onerror = () => reject(request.error);\r\n    request.onblocked = () => {\r\n      alert('Blocked')\r\n    };\r\n  });\r\n}\r\n\r\nexport const loadData = (dataBase) => {\r\n  return new Promise((resolve, reject) => {\r\n    const transaction = dataBase.transaction('state', 'readonly');\r\n    const request = transaction.objectStore('state').get(1);\r\n    request.onsuccess = () => resolve(request.result);\r\n    request.onerror = () => reject(request.error);\r\n  });\r\n}\r\n\r\nexport const addOrUpdateData = (dataBase, data) => {\r\n  return new Promise((resolve, reject) => {\r\n    const transaction = dataBase.transaction('state', 'readwrite');\r\n    const request = transaction.objectStore('state').put({ 'id': 1, 'data': data });\r\n    request.onsuccess = () => resolve(request.result);\r\n    request.onerror = () => reject(request.error);\r\n  });\r\n}\r\n","    \r\nimport axios from 'axios';\r\n    \r\n     const getMostPollutedCities = async (country, limit) => {\r\n        const countryPromise = axios.get('https://api.openaq.org/v1/cities?country=' + country + '&order_by=count&limit=' + limit +'&sort=desc');\r\n        const countryResult = await axios.all([countryPromise]);\r\n\r\n        return countryResult[0].data.results.map((element) => {\r\n            return element.city;\r\n        })\r\n    }\r\n\r\n     const getCitiesDescriptions = async (citiesNames) => {\r\n        const promises = [];\r\n\r\n        for (let i = 0; i < citiesNames.length; i++) {\r\n            const promise = axios.get('https://en.wikipedia.org/w/api.php?origin=*&action=query&redirects=1&titles=' +\r\n                citiesNames[i] + '&format=json&prop=extracts&exintro&explaintext');\r\n                promises.push(promise)\r\n        }              \r\n        const result = await axios.all(promises);\r\n\r\n        return result.map(element => {\r\n            const pages = element.data.query.pages;\r\n            return Object.values(pages)[0].extract;\r\n        })\r\n    }\r\n\r\n    export const setCitiesInformations = async (country, limit) => {\r\n        const citiesNames = await getMostPollutedCities(country, limit);\r\n        const citiesDescriptions = await getCitiesDescriptions(citiesNames);\r\n\r\n        const informations = { name: citiesNames, description: citiesDescriptions }\r\n        return informations;\r\n    }\r\n    ","export const countries = [\r\n    { value: 'FR', label: 'France' },\r\n    { value: 'DE', label: 'Germany' },\r\n    { value: 'PL', label: 'Poland' },\r\n    { value: 'ES', label: 'Spain' }\r\n]","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CountriesSearchField } from '../components/CountriesSearchField';\r\nimport { openDataBase, loadData, addOrUpdateData } from '../services/DataBase';\r\nimport { validate } from '../services/Validation';\r\nimport {setCitiesInformations} from '../services/Api';\r\nimport { countries } from '../consts'\r\n\r\nclass CountriesSearchFieldContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            country: '',\r\n            limit: 0\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const openedDataBase = await openDataBase();\r\n\r\n        await loadData(openedDataBase).then((result) => {\r\n            this.setState({\r\n                country: result ? result.data.country : null,\r\n                limit: result ? result.data.limit : null\r\n            })\r\n        });\r\n\r\n        window.onbeforeunload = () => {\r\n            addOrUpdateData(openedDataBase, this.state);\r\n        }\r\n    };\r\n\r\n    onValueChange = (e) => {\r\n        if (e.target) {\r\n            this.setState({\r\n                limit: e.target.value\r\n            })\r\n        }\r\n        else {\r\n        this.setState({\r\n            country: e ? e : null\r\n        })\r\n    }\r\n    }\r\n\r\n    setCitiesInformations = async () => {\r\n        this.props.setCitiesInformations(await setCitiesInformations(this.state.country.value, this.state.limit))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CountriesSearchField\r\n                options={countries}\r\n                onChange={this.onValueChange}\r\n                country={this.state.country}\r\n                limit={this.state.limit}\r\n                onClick={this.setCitiesInformations}\r\n                validate={validate([this.state.country, this.state.limit])}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setCitiesInformations: (informations) => { (dispatch({ type: 'SET_CITIES_INFORMATIONS', informations })) }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CountriesSearchFieldContainer);","export const validate = (inputs) => {\r\n  if (inputs) {\r\n    return inputs.every(element => {\r\n      return element\r\n    });\r\n  }\r\n  return false\r\n}\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CityInformationContainer from './containers/CityInformationContainer';\nimport CountriesSearchFieldContainer from './containers/CountriesSearchFieldContainer';\nimport './stylesheets/rootStyles.scss';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <CountriesSearchFieldContainer />\n        {this.props.informations ?\n          <CityInformationContainer /> : null\n        }\n      </div>\n\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    informations: state.informations\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './store/reducers/rootReducer'\nimport App from './App';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}